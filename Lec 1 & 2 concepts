1.What is software?
Ans:Computer programs and associated documentation.
 Software productsmay be developed for a particular
 customer or maybe developed for a general market.

2.What are the attributes of good software?
Ans:Good software should deliver the required functionality
 and performance to the user and should be
 maintainable,dependable and usable.

3.What issoftware engineering?
Ans:Software engineering is an engineering discipline that is
 concerned with all aspects of software production.

4. What are the fundamental software engineering activities?
Ans: Software specification, software development, software
 validation and software evolution.

5. What is the difference between software
 engineering and computer science?
Ans: Computer science focuses on theory and fundamentals;
 software engineering is concerned with the practicalities
 of developing and delivering useful software.

6.What is the difference between software
 engineering and system engineering?
Ans: System engineering is concerned with all aspects of
 computer-based systems development including
 hardware, software and process engineering. Software
 engineering is part of this more general process.

7. What are the key challenges facing
 software engineering?
Ans:Coping with increasing diversity, demands for reduced
 delivery times and developing trustworthy software.

Software products
 Generic products
 Stand-alone systems that are marketed and sold to any 
customer who wishes to buy them.
 Examples – PC software such as graphics programs, project 
management tools; CAD software; software for specific markets 
such as appointments systems for dentists.
 Customized products
 Software that is commissioned by a specific customer to meet 
their own needs. 
Examples – embedded control systems, air traffic control 
software, traffic monitoring systems

Generic products
 The specification of what the software should do is owned by the 
software developer and decisions on software change are made 
by the developer.
 Customized products
The specification of what the software should do is owned by 
the customer for the software and they make decisions on 
software changes that are required.

 Product characteristic Description

 Maintainability
 Software should be written in such a way so that it can evolve to
 meet the changing needs of customers. This is a critical attribute
 because software change is an inevitable requirement of a
 changing business environment.

 Dependability and security
 Software dependability includes a range of characteristics
 including reliability, security and safety. Dependable software
 should not cause physical or economic damage in the event of
 system failure. Malicious users should not be able to access or
 damage the system.

 Efficiency
 Software should not make wasteful use of system resources such
 as memory and processor cycles. Efficiency therefore includes
 responsiveness, processing time, memory utilisation, etc.

 Acceptability
 Software must be acceptable to the type of users for which it is
 designed. This means that it must be understandable, usable and
 compatible with other systems that they use.

Engineering discipline
 Using appropriate theories and methods to solve problems 
bearing in mind organizational and financial constraints.
